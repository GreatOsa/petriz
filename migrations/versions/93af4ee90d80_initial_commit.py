"""Initial commit

Revision ID: 93af4ee90d80
Revises:
Create Date: 2024-11-22 21:46:12.002448

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision: str = "93af4ee90d80"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "accounts__client_accounts",
        sa.Column("uid", sa.String(length=50), nullable=True),
        sa.Column("name", sa.Unicode(length=255), nullable=True),
        sa.Column(
            "email", sqlalchemy_utils.types.email.EmailType(length=255), nullable=False
        ),
        sa.Column(
            "password",
            sqlalchemy_utils.types.password.PasswordType(max_length=4294967331),
            nullable=False,
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("username", sa.Unicode(length=255), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_staff", sa.Boolean(), nullable=True),
        sa.Column("is_admin", sa.Boolean(), nullable=True),
        sa.Column("date_joined", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_accounts__client_accounts_email"),
        "accounts__client_accounts",
        ["email"],
        unique=True,
    )
    op.create_index(
        op.f("ix_accounts__client_accounts_id"),
        "accounts__client_accounts",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_accounts__client_accounts_uid"),
        "accounts__client_accounts",
        ["uid"],
        unique=True,
    )
    op.create_table(
        "accounts__client_access_keys",
        sa.Column("account_id", sa.UUID(), nullable=False),
        sa.Column("key", sa.String(length=50), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accounts__client_accounts.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_accounts__client_access_keys_account_id"),
        "accounts__client_access_keys",
        ["account_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_accounts__client_access_keys_id"),
        "accounts__client_access_keys",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_accounts__client_access_keys_key"),
        "accounts__client_access_keys",
        ["key"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_accounts__client_access_keys_key"),
        table_name="accounts__client_access_keys",
    )
    op.drop_index(
        op.f("ix_accounts__client_access_keys_id"),
        table_name="accounts__client_access_keys",
    )
    op.drop_index(
        op.f("ix_accounts__client_access_keys_account_id"),
        table_name="accounts__client_access_keys",
    )
    op.drop_table("accounts__client_access_keys")
    op.drop_index(
        op.f("ix_accounts__client_accounts_uid"), table_name="accounts__client_accounts"
    )
    op.drop_index(
        op.f("ix_accounts__client_accounts_id"), table_name="accounts__client_accounts"
    )
    op.drop_index(
        op.f("ix_accounts__client_accounts_email"),
        table_name="accounts__client_accounts",
    )
    op.drop_table("accounts__client_accounts")
    # ### end Alembic commands ###
